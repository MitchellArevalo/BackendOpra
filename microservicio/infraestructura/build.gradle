buildscript {
	repositories {
		mavenCentral()
	}
	configurations.maybeCreate('pitest')
	dependencies {
		pitest 'org.pitest:pitest-junit5-plugin:0.12'
	}
}

plugins {
	id 'info.solidsoft.pitest'
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'jacoco'

group = 'ecommerce'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
	mavenCentral()
}

dependencies {
	testImplementation project.ext.mockitocore
	testImplementation project.ext.mockitoinline
	testImplementation project.ext.mockitojupiter
	testImplementation project.ext.h2
	testImplementation project.ext.springboottest
	implementation project.ext.springbootweb
	implementation project.ext.springdoc
	implementation project.ext.swagger

	implementation project.ext.apachecommons
	implementation project.ext.springbootjdbc
	runtimeOnly project.ext.db
	testImplementation project.ext.flyway
	testImplementation project.ext.flywaytest

	
	implementation project(':dominio')
	implementation project(':aplicacion')


	implementation project(':comun:comun-infraestructura')
	implementation project(':comun:comun-aplicacion')

	compileOnly project.ext.lombok
	annotationProcessor project.ext.lombok

	implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
	implementation 'org.springframework.boot:spring-boot-starter-security:2.7.7'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.2'
}


jacocoTestReport {
	reports {
		xml.enabled true
		html.enabled true
	}
	additionalSourceDirs files("../aplicacion/src/main/java")
	additionalClassDirs files("../aplicacion/build/classes/java/main")
}

pitest {
	testPlugin = 'junit5'
	junit5PluginVersion = '0.14'
	testSourceSets = [sourceSets.test]
	mainSourceSets = [sourceSets.main]
	useClasspathFile = true
}

test {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}
